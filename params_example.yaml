#### Project wide parameters
# lowest level project directory
proj_dir : '/path/to/project/root/'
# directory for logging information
log_subdir : 'log'
# Sets log level to logging.DEBUG
# Also catches the warnings in the logs
debug: False
# folder for figures
fig_subdir : 'figures'  # not in use yet
# subfolder containing preprocessed data
prepro_subdir: 'preprocessed'


#### parameters that are network specific
net:
    # list of stations used in the project
    # type: list of strings or string, wildcards allowed
    network : 'D0'
    station : ['BZG', 'ESO', 'KBG', 'KIR']
    # stations : ['D0.BZG', 'D0.ESO', 'D0.KBG', 'D0.KIR']
    # list of channels
    # type: list of strings
    channels : ['HHZ','HHN','HHE']

#### parameters for correlation (emperical Green's function creation)
co:
    # subdirectory of 'proj_dir' to store correlation
    # type: string
    subdir : 'corr'
    # times sequences to read for cliping or muting on stream basis
    # These should be long enough for the reference (e.g. the standard
    # deviation) to be rather independent of the parts to remove
    # type: string
    read_start : '2015-08-1 00:00:01.0'
    read_end : '2015-08-06 00:00:00.0'
    # type: float [seconds]
    # The longer the faster, but higher RAM usage.
    # Note that this is also the length of the correlation batches
    # that will be written (i.e., length that will be 
    # kept in memory before writing to disk)
    read_len : 86398
    read_inc : 86400

    # Method to combine different traces
    combination_method : 'betweenStations'

    # preprocessing of the original length time series
    # these function work on an obspy.Stream object given as first argument
    # and return an obspy.Stream object.
    preProcessing : [
                    {'function':'miic3.utils.miic_utils.detrend_st',
                    'args':{'type':'simple'}},
                    {'function':'miic3.utils.miic_utils.cos_taper_st',
                      'args':{'taper_len': 10, # seconds
                              'taper_at_masked': True}},
                    {'function':'miic3.utils.miic_utils.stream_filter',
                      'args':{'ftype':'bandpass',
                              'filter_option':{'freqmin':2, #0.01
                                               'freqmax':8}}}
                     #{'function':'miic.core.stream.stream_mute',
                     # 'args':{'taper_len':100,
                     #         'mute_method':'std_factor',
                     #         'mute_value':3}}
                    ]
    # subdivision of the read sequences for correlation
    # type: presence of this key
    subdivision:
        # type: float [seconds]
        corr_inc : 3600
        corr_len : 3600
        # recombine these subdivisions
        # unused at the time
        # type: boolean
        recombine_subdivision : True
        # delete
        # type: booblean
        delete_subdivision : False
    # Taper the time windows with a 5% Hann taper on each side. If this is True,
    # the time windows will just simply be prolonged by the length of the taper,
    # so that no data is lost
    taper: False

    # parameters for correlation preprocessing
    corr_args : {'TDpreProcessing':[
                                    #{'function':'miic3.correlate.correlate.detrend',
                                    # 'args':{'type':'constant'}},
                                   #{'function':'miic.core.pxcorr_func.TDfilter',
                                   # 'args':{'type':'bandpass','freqmin':0.01,'freqmax':4}},
                                    #{'function':'miic.core.pxcorr_func.mute',
                                    # 'args':{'taper_len':100.,
                                           # 'threshold':10                 # Not used in miic3
                 'direct_output':{'function':'convert_to_matlab',
                                  'base_name':'trace'}00, absolute threshold
                                    #         'std_factor':3,
                                    #         'filter':{'type':'bandpass','freqmin':2,'freqmax':4},
                                    #         'extend_gaps':True}},
                                   {'function':'miic3.correlate.correlate.clip',
                                    'args':{'std_factor':3}},
                                   ],
                 'FDpreProcessing':[
                                    {'function':'miic3.correlate.correlate.spectralWhitening',
                                     'args':{'joint_norm':False}},
                                    {'function':'miic3.correlate.correlate.FDfilter',
                                     'args':{'freqs':[0.01,0.02,9,10]}}
                                    ],
                 'lengthToSave':100,
                 'center_correlation':True,      # make sure zero correlation time is in the center
                 'normalize_correlation':True,
                 'combinations':[]
                }

    # Component rotation (only possible if 'direct_output' is not in 'corr_args')
    # type: string ['NO', 'ZNE->ZRT', 'NE->RT']
    # Not used yet
    rotation : 'NO'


#### parameters for the estimation of time differences
dv:
    # subfolder for storage of time difference results
    subdir : 'vel_change'

    # Plotting
    plot_vel_change : True

    ### Definition of calender time windows for the time difference measurements
    start_date : '2015-05-01 00:00:00.0'   # %Y-%m-%dT%H:%M:%S.%fZ'
    end_date : '2016-01-01 00:00:00.0'
    win_len : 86400                         # length of window in which EGFs are stacked
    date_inc : 86400                        # increment of measurements

    ### Frequencies
    freq_min : 0.1
    freq_max : 0.5

    ### Definition of lapse time window
    tw_start : 20     # lapse time of first sample [s]
    tw_len : 60       # length of window [s]
    
    ### Range to try stretching
    stretch_range : 0.03
    stretch_steps : 1000

